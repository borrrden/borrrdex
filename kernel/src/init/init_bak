[bits 16]
global ap_trampoline

ap_trampoline:
    cli
    cld
    jmp 0h:8040h
    align 16

_L8010_GDT_table:
    dq 0
    dd 0x0000ffff, 0x00cf9a00
    dd 0x0000ffff, 0x008f9200 
    dd 0x00000068, 0x00cf8900 
_L8030_GDT_value:
    dw _L8030_GDT_value - _L8010_GDT_table - 1
    dd 0x8010
    dq 0
    align 64

_L8040:
    xor ax, ax
    mov ds, ax
    lgdt [0x8030]
    mov eax, cr0
    or  eax, 1
    mov cr0, eax
    jmp 0x8:0x8060
    align 32

[bits 32]
extern ap_startup
extern aprunning
extern bspdone
extern stack_top
extern pml4_address
extern gdt_address
extern idt_address

_L8060:
    mov ax, 16
    mov ds, ax
    mov ss, ax

    mov eax, 1
    cpuid
    shr ebx, 24
    mov edi, ebx

    shl ebx, 15
    mov esp, [stack_top]
    sub esp, ebx
    push edi

    mov eax, cr0
    and eax, dword 0x7fffffff
    mov cr0, eax

    mov eax, [pml4_address]
    mov cr3, eax
    mov eax, cr4
    or eax, 1 << 5
    mov cr4, eax

    mov ecx, 0xC0000080
    rdmsr
    or eax, 1 << 8
    wrmsr

    mov eax, cr0
    or eax, 1 << 31 | 1 << 0
    mov cr0, eax

    call gdt_address
    lgdt [eax]
    call idt_address
    lidt [eax]

loop:  
    pause
    cmp [bspdone], byte 0
    jz loop
    lock inc byte [aprunning]

    jmp dword 0x8:ap_startup
