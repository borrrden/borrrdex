#pragma once

#include <stdint.h>
#include <stddef.h>

inline constexpr uint32_t hash(uint8_t cls, uint8_t subclass, uint8_t progif) {
    return ((uint32_t)cls << 16) | ((uint32_t)subclass << 8) | progif;
}

inline constexpr uint16_t hash(uint8_t cls, uint8_t subclass) {
    return ((uint16_t)cls << 8) | subclass;
}

template<typename T>
struct DeviceTypeEntry {
    T hash;
    const char* val;
};

template<typename T>
const char* binary_search(DeviceTypeEntry<T> list[], T lookup, size_t start,size_t end);


static DeviceTypeEntry<uint8_t> ClassList[] = {
    { 0x0, "Unclassified" },
    { 0x1, "Mass Storage Controller" },
    { 0x2, "Network Controller" },
    { 0x3, "Display Controller" },
    { 0x4, "Multimedia Controller" },
    { 0x5, "Memory Controller" },
    { 0x6, "Bridge Device" },
    { 0x7, "Simple Communication Controller" },
    { 0x8, "Base System Peripheral" },
    { 0x9, "Input Device Controller" },
    { 0xA, "Docking Station" },
    { 0xB, "Processor" },
    { 0xC, "Serial Bus Controller" },
    { 0xD, "Wireless Controller" },
    { 0xE, "Intelligent Controller" },
    { 0xF, "Satellite Communication Controller" },
    { 0x10, "Encryption Controller" },
    { 0x11, "Signal Processing Controller" },
    { 0x12, "Processing Accelerator" },
    { 0x13, "Non-Essential Instrumentation" },
    { 0x40, "Co-Processor" }
};

static DeviceTypeEntry<uint16_t> SubclassList[] = {
    { hash(0x0, 0x0), "Non-VGA-Compatible Device" },
    { hash(0x0, 0x1), "VGA-Compatible Device" },
    { hash(0x1, 0x0), "SCSI Bus Controller" },
    { hash(0x1, 0x1), "IDE Controller" },
    { hash(0x1, 0x2), "Floppy Disk Controller" },
    { hash(0x1, 0x3), "IPI Bus Controller" },
    { hash(0x1, 0x4), "RAID Controller" },
    { hash(0x1, 0x5), "ATA Controller" },
    { hash(0x1, 0x6), "Serial ATA" },
    { hash(0x1, 0x7), "Serial Attached SCSI" },
    { hash(0x1, 0x8), "Non-Volatile Memory Controller" },
    { hash(0x2, 0x0), "Ethernet Controller" },
    { hash(0x2, 0x1), "Token Ring Controller" },
    { hash(0x2, 0x2), "FDDI Controller" },
    { hash(0x2, 0x3), "ATM Controller" },
    { hash(0x2, 0x4), "ISDN Controller" },
    { hash(0x2, 0x5), "WorldFip Controller" },
    { hash(0x2, 0x6), "PICMG 2.14 Multi Computing" },
    { hash(0x2, 0x7), "Infiniband Controller" },
    { hash(0x2, 0x8), "Fabric Controller" },
    { hash(0x3, 0x0), "VGA Compatible Controller" },
    { hash(0x3, 0x1), "XGA Controller" },
    { hash(0x3, 0x2), "3D Controller (Not VGA-Compatible)" },
    { hash(0x4, 0x0), "Multimedia Video Controller" },
    { hash(0x4, 0x1), "Multimedia Audio Controller" },
    { hash(0x4, 0x2), "Computer Telephony Device"},
    { hash(0x4, 0x3), "Audio Device" },
    { hash(0x5, 0x0), "RAM Controller" },
    { hash(0x5, 0x1), "Flash Controller" },
    { hash(0x6, 0x0), "Host Bridge" },
    { hash(0x6, 0x1), "ISA Bridge" },
    { hash(0x6, 0x2), "EISA Bridge" },
    { hash(0x6, 0x3), "MCA Bridge" },
    { hash(0x6, 0x4), "PCI-to-PCI Bridge" },
    { hash(0x6, 0x5), "PCMCIA Bridge" },
    { hash(0x6, 0x6), "NuBus Bridge" },
    { hash(0x6, 0x7), "CardBus Bridge" },
    { hash(0x6, 0x8), "RACEway Bridge" },
    { hash(0x6, 0x9), "PCI-to-PCI Bridge" },
    { hash(0x6, 0xA), "InfiniBand-to-PCI Host Bridge" },
    { hash(0x7, 0x0), "Serial Controller" },
    { hash(0x7, 0x1), "Parallel Controller" },
    { hash(0x7, 0x2), "Multiport Serial Controller" },
    { hash(0x7, 0x3), "Modem" },
    { hash(0x7, 0x4), "IEEE 488.1/2 (GPIB) Controller" },
    { hash(0x7, 0x5), "Smart Card" },
    { hash(0x8, 0x0), "PIC" },
    { hash(0x8, 0x1), "DMA Controller" },
    { hash(0x8, 0x2), "Timer" },
    { hash(0x8, 0x3), "RTC Controller" },
    { hash(0x8, 0x4), "PCI Hot-Plug Controller" },
    { hash(0x8, 0x5), "SD Host Controller" },
    { hash(0x8, 0x6), "IOMMU" },
    { hash(0x9, 0x0), "Keyboard Controller" },
    { hash(0x9, 0x1), "Digitizer Pen" },
    { hash(0x9, 0x2), "Mouse Controller" },
    { hash(0x9, 0x3), "Scanner Controller" },
    { hash(0x9, 0x4), "Gameport Controller" },
    { hash(0xA, 0x0), "Generic" },
    { hash(0xB, 0x0), "386" },
    { hash(0xB, 0x1), "486" },
    { hash(0xB, 0x2), "Pentium" },
    { hash(0xB, 0x3), "Pentium Pro" },
    { hash(0xB, 0x10), "Alpha" },
    { hash(0xB, 0x20), "PowerPC" },
    { hash(0xB, 0x30), "MIPS" },
    { hash(0xB, 0x40), "Co-Processor" },
    { hash(0xC, 0x0), "FireWire (IEEE 1394) Controller" },
    { hash(0xC, 0x1), "ACCESS Bus" },
    { hash(0xC, 0x2), "SSA" },
    { hash(0xC, 0x3), "USB Controller" },
    { hash(0xC, 0x4), "Fibre Channel" },
    { hash(0xC, 0x5), "SMBus" },
    { hash(0xC, 0x6), "InfiniBand" },
    { hash(0xC, 0x7), "IPMI Interface" },
    { hash(0xC, 0x8), "SERCOS Interface (IEC 61491)" },
    { hash(0xC, 0x9), "CANbus" },
    { hash(0xD, 0x0), "iRDA Compatible Controller" },
    { hash(0xD, 0x1), "Consumer IR Controller" },
    { hash(0xD, 0x10), "RF Controller" },
    { hash(0xD, 0x11), "Bluetooth Controller" },
    { hash(0xD, 0x12), "Broadband Controller" },
    { hash(0xD, 0x20), "Ethernet Controller (802.1a)" },
    { hash(0xD, 0x21), "Ethernet Controller (802.1b)" },
    { hash(0xE, 0x0), "I20" },
    { hash(0xF, 0x1), "Satellite TV Controller" },
    { hash(0xF, 0x2), "Satellite Audio Controller" },
    { hash(0xF, 0x3), "Satellite Voice Controller" },
    { hash(0xF, 0x4), "Satellite Data Controller" },
    { hash(0x10, 0x0), "Network and Computing Encrpytion/Decryption" },
    { hash(0x10, 0x10), "Entertainment Encryption/Decryption" },
    { hash(0x11, 0x0), "DPIO Modules" },
    { hash(0x11, 0x1), "Performance Counters" },
    { hash(0x11, 0x10), "Communication Synchronizer" },
    { hash(0x11, 0x20), "Signal Processing Management" }
};
static DeviceTypeEntry<uint32_t> InterfaceList[] = {
    { hash(0x1, 0x1, 0x0), "ISA Compatibility mode-only controller" },
    { hash(0x1, 0x1, 0x5), "PCI native mode-only controller" },
    { hash(0x1, 0x1, 0xA), "ISA Compatibility mode controller w/ both channels PCI" },
    { hash(0x1, 0x1, 0xF), "PCI native mode controller w/ both channels ISA" },
    { hash(0x1, 0x1, 0x80), "ISA Compatibility mode-only controller w/ mastering" },
    { hash(0x1, 0x1, 0x85), "PCI native mode-only controller w/ mastering" },
    { hash(0x1, 0x1, 0x8A), "ISA Compatibility mode controller w/ both channels PCI & mastering" },
    { hash(0x1, 0x1, 0x8F), "PCI native mode controller w/ both channels ISA & mastering" },
    { hash(0x1, 0x5, 0x20), "Single DMA" },
    { hash(0x1, 0x5, 0x30), "Chained DMA" },
    { hash(0x1, 0x6, 0x0), "Vendor Specific Interface" },
    { hash(0x1, 0x6, 0x1), "AHCI 1.0" },
    { hash(0x1, 0x6, 0x2), "Serial Storage Bus" },
    { hash(0x1, 0x7, 0x0), "SAS" },
    { hash(0x1, 0x7, 0x1), "Serial Storage Bus" },
    { hash(0x1, 0x8, 0x1), "NVMHCI" },
    { hash(0x1, 0x8, 0x2), "NVM Express" },
    { hash(0x3, 0x0, 0x0), "VGA Controller" },
    { hash(0x3, 0x0, 0x1), "8514-Compatible Controller" },
    { hash(0x6, 0x4, 0x0), "Normal Decode" },
    { hash(0x6, 0x4, 0x1), "Subtractive Decode" },
    { hash(0x6, 0x8, 0x0), "Transparent Mode" },
    { hash(0x6, 0x8, 0x1), "Endpoint Mode" },
    { hash(0x6, 0x9, 0x40), "Semi-Transparent (primary bus toward CPU)" },
    { hash(0x6, 0x9, 0x80), "Semi-Transparent (secondary bus toward CPU)" },
    { hash(0x7, 0x0, 0x0), "8250-Compatible (Generic XT)" },
    { hash(0x7, 0x0, 0x1), "16450-Compatible" },
    { hash(0x7, 0x0, 0x2), "16550-Compatible" },
    { hash(0x7, 0x0, 0x3), "16650-Compatible" },
    { hash(0x7, 0x0, 0x4), "16750-Compatible" },
    { hash(0x7, 0x0, 0x5), "16850-Compatible" },
    { hash(0x7, 0x0, 0x6), "16950-Compatible" },
    { hash(0x7, 0x1, 0x0), "Standard Parallel Port" },
    { hash(0x7, 0x1, 0x1), "Bi-Directional Parallel Port" },
    { hash(0x7, 0x1, 0x2), "ECP 1.X Compliant Parallel Port" },
    { hash(0x7, 0x1, 0x3), "IEEE 1284 Controller" },
    { hash(0x7, 0x1, 0xFE), "IEEE 1284 Target Device" },
    { hash(0x7, 0x3, 0x0), "Generic Modem" },
    { hash(0x7, 0x3, 0x1), "Hayes 16450-Compatible Interface" },
    { hash(0x7, 0x3, 0x2), "Hayes 16550-Compatible Interface" },
    { hash(0x7, 0x3, 0x3), "Hayes 16650-Compatible Interface" },
    { hash(0x7, 0x3, 0x4), "Hayes 16750-Compatible Interface" },
    { hash(0x8, 0x0, 0x0), "Generic 8259-Compatible" },
    { hash(0x8, 0x0, 0x1), "ISA-Compatible" },
    { hash(0x8, 0x0, 0x2), "EISA-Compatible" },
    { hash(0x8, 0x0, 0x10), "I/O APIC Interrupt Controller" },
    { hash(0x8, 0x0, 0x20), "I/O(x) APIC Interrupt Controller" },
    { hash(0x8, 0x1, 0x0), "Generic 8237-Compatible" },
    { hash(0x8, 0x1, 0x1), "ISA-Compatible" },
    { hash(0x8, 0x1, 0x2), "EISA-Compatible" },
    { hash(0x8, 0x2, 0x0), "Generic 8254-Compatible" },
    { hash(0x8, 0x2, 0x1), "ISA-Compatible" },
    { hash(0x8, 0x2, 0x2), "EISA-Compatible" },
    { hash(0x8, 0x2, 0x3), "HPET" },
    { hash(0x8, 0x3, 0x0), "Generic RTC" },
    { hash(0x8, 0x3, 0x1), "ISA-Compatible" },
    { hash(0x9, 0x4, 0x0), "Generic" },
    { hash(0x9, 0x4, 0x10), "Extended" },
    { hash(0xC, 0x0, 0x0), "Generic" },
    { hash(0xC, 0x0, 0x10), "OHCI" },
    { hash(0xC, 0x3, 0x0), "UHCI Controller" },
    { hash(0xC, 0x3, 0x10), "OHCI Controller" },
    { hash(0xC, 0x3, 0x20), "EHCI (USB2) Controller" },
    { hash(0xC, 0x3, 0x30), "XHCI (USB3) Controller" },
    { hash(0xC, 0x3, 0x80), "Unspecified" },
    { hash(0xC, 0x3, 0xFE), "USB Device" },
    { hash(0xC, 0x7, 0x0), "SMIC" },
    { hash(0xC, 0x7, 0x1), "Keyboard Controller Style" },
    { hash(0xC, 0x7, 0x2), "BLock Transfer" }
};